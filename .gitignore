# ===== NODE.JS / SVELTE / SVELTEKIT =====

# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# SvelteKit build output
.svelte-kit/
/build/
.output/
dist/

# SvelteKit generated files and directories
.svelte-kit/*
.svelte-kit/generated/
.svelte-kit/output/
.svelte-kit/types/
.svelte-kit/ambient.d.ts
.svelte-kit/manifest.js
.svelte-kit/routes.js
.svelte-kit/vite.config.js

# SvelteKit development files
.svelte-kit/dev/
.svelte-kit/imports/
.svelte-kit/nodes/
.svelte-kit/params/

# SvelteKit prerendered pages
.svelte-kit/prerendered/

# SvelteKit service worker
.svelte-kit/service-worker.js

# SvelteKit client-side generated files
.svelte-kit/generated/client/
.svelte-kit/generated/server/
.svelte-kit/generated/app.html
.svelte-kit/generated/app.d.ts
.svelte-kit/generated/app.js
.svelte-kit/generated/app.css
.svelte-kit/generated/entry.js
.svelte-kit/generated/entry.css
.svelte-kit/generated/fallback.js
.svelte-kit/generated/hooks.js
.svelte-kit/generated/params.js
.svelte-kit/generated/root.js
.svelte-kit/generated/root.css
.svelte-kit/generated/service-worker.js
.svelte-kit/generated/start.js
.svelte-kit/generated/vite-env.d.ts

# SvelteKit build artifacts
.svelte-kit/build/
.svelte-kit/build/client/
.svelte-kit/build/server/
.svelte-kit/build/service-worker.js
.svelte-kit/build/manifest.json

# SvelteKit static files (if using static adapter)
.svelte-kit/static/

# SvelteKit prerender output
.svelte-kit/prerendered/

# SvelteKit development server
.svelte-kit/dev/

# SvelteKit cache
.svelte-kit/cache/

# SvelteKit temporary files
.svelte-kit/tmp/
.svelte-kit/temp/

# SvelteKit environment files
.svelte-kit/env.d.ts

# SvelteKit adapter outputs
.svelte-kit/vercel/
.svelte-kit/netlify/
.svelte-kit/cloudflare/
.svelte-kit/node/

# Deployment outputs
.vercel/
.netlify/
.wrangler/

# Vite cache
.vite/

# Environment files
.env
.env.*
!.env.example
!.env.test

# ===== .NET / C# =====

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverage*.info

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these files may be visible to others.
*.azurePubxml

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment the next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from SQL Server tools
*.rpt
*.bak

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio 6 technical files
*.ncb
*.aps

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# Visual Studio History (VSHistory) files
.vshistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

# VS Code files for those working on multiple tools
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

# Windows Installer files from build outputs
*.cab
*.msi
*.msix
*.msm
*.msp

# JetBrains Rider
*.sln.iml

# ===== SYSTEM FILES =====

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ===== EDITOR/IDE =====

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Visual Studio
.vs/
*.suo
*.user
*.userosscache
*.sln.docstates

# JetBrains IDEs
.idea/
*.iml
*.ipr
*.iws

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ===== CURSOR/TASKMASTER =====

.cursor/rules/cursor_rules.mdc
.cursor/mcp.json
.cursor/rules/*

# ===== SCRIPTS AND KEYS =====

scripts/prd.txt
.keys/
.keys/*
.keys
.keys.json

# ===== MISC =====

# Logs
*.log
*.session
*.session-journal

# Coverage reports
coverage/
*.lcov

# Task files
tasks.json
tasks/

# Package lock files (optional - uncomment if you want to ignore them)
# package-lock.json
# yarn.lock

# Internal apps
internal-apps/*

# SvelteKit generated files (specific to this project)
landing/.svelte-kit/generated/client/app.js
landing/.svelte-kit/generated/client/app.css
landing/.svelte-kit/generated/client/entry.js
landing/.svelte-kit/generated/client/fallback.js
landing/.svelte-kit/generated/client/start.js
landing/.svelte-kit/generated/server/app.js
landing/.svelte-kit/generated/server/entry.js
landing/.svelte-kit/generated/server/fallback.js
landing/.svelte-kit/generated/server/start.js
landing/.svelte-kit/generated/service-worker.js
landing/.svelte-kit/generated/manifest.js
landing/.svelte-kit/generated/routes.js
landing/.svelte-kit/generated/app.d.ts
landing/.svelte-kit/generated/vite-env.d.ts
landing/.svelte-kit/generated/ambient.d.ts
landing/.svelte-kit/generated/app.html
landing/.svelte-kit/generated/root.js
landing/.svelte-kit/generated/root.css
landing/.svelte-kit/generated/hooks.js
landing/.svelte-kit/generated/params.js
landing/.svelte-kit/generated/entry.css
landing/.svelte-kit/generated/fallback.css
landing/.svelte-kit/generated/start.css 