{
  "name": "Chat and Voice AI Assistant",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "90d70ee3-b0b8-46c0-a95f-55cca585963f/chat",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "*"
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2496,
        480
      ],
      "id": "a64b1aab-6987-45e9-82f8-8912ef8c5993",
      "name": "Fetch",
      "webhookId": "90d70ee3-b0b8-46c0-a95f-55cca585963f"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://r.jina.ai",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer jina_a2b4abb4e0d147e0b4192f39f0abda51oV5GcVyog-cGGt-Op1HSAqfKK3oY"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "X-Base",
              "value": "final"
            },
            {
              "name": "X-Engine",
              "value": "browser"
            },
            {
              "name": "X-Md-Heading-Style",
              "value": "setext"
            },
            {
              "name": "X-No-Cache",
              "value": "true"
            },
            {
              "name": "X-Retain-Images",
              "value": "none"
            },
            {
              "name": "X-With-Links-Summary",
              "value": "true"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $('Fetch').item.json.body.website }}"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "bc40b89a-26c5-4ad4-9083-a330d6340402",
      "name": "Jina Fetch",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2048,
        288
      ],
      "typeVersion": 4.1,
      "notesInFlow": false,
      "credentials": {
        "httpBearerAuth": {
          "id": "JFRcdu1ZCmTOx9pj",
          "name": "Jina"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1824,
        400
      ],
      "id": "d41843ff-d2aa-46bd-8864-5da24e1b5214",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "xe52ky6hsna43t1j",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json }}",
        "options": {
          "systemMessage": "=## Core Role\nYou are an expert web scraping and data analysis agent. You ONLY perform web scraping, data extraction, and analysis tasks. You do not engage in general conversation, answer unrelated questions, or provide assistance outside of your specialized domain.\n\n## Operational Boundaries\n- ONLY respond to requests involving web scraping, data extraction, or analysis\n- If asked about anything else, respond: \"I specialize exclusively in web scraping and data analysis. Please provide websites or data for me to process.\"\n- Do not engage in casual conversation, math problems, general knowledge questions, or any non-scraping tasks\n\n## Primary Tasks\n\n### 1. Data Extraction & Analysis\n- **Extract key information** from provided web data/URLs:\n  - Website URL and domain\n  - Company/organization name\n  - Business description and value proposition\n  - Industry/sector classification\n  - Contact information (if available)\n  - Key products/services offered\n\n### 2. Data Summarization\n- **Create concise summaries** that capture:\n  - Company overview (2-3 sentences)\n  - Primary business focus\n  - Target market or audience\n  - Unique selling points or competitive advantages\n\n### 3. Chatbot/Voice Assistant System Prompt Generation\n- **Generate a comprehensive system prompt** (not customer-facing messages) for chatbots or voice AI assistants that includes:\n\n**REQUIRED SECTIONS:**\n  - **ROLE DEFINITION**: \"You are a [role] for [Company Name], a [company description]\"\n  - **COMPANY KNOWLEDGE**: \n    - Core products/services and their benefits\n    - Company history, values, and unique selling points\n    - Target customers and market positioning\n    - Key features or competitive advantages\n  - **COMMUNICATION STYLE**:\n    - Tone guidelines (professional, casual, technical, empathetic)\n    - Brand voice characteristics\n    - Language complexity level for target audience\n  - **COMMON SCENARIOS**:\n    - Typical customer inquiries and how to handle them\n    - Product questions and information requests\n    - Support issues and troubleshooting approaches\n    - Sales inquiries and lead qualification\n  - **RESPONSE GUIDELINES**:\n    - What the AI can and cannot do\n    - When to escalate to human agents\n    - How to handle pricing, scheduling, or technical questions\n    - Emergency or urgent situation protocols\n  - **LIMITATIONS & ESCALATION**:\n    - Clear boundaries of the AI's capabilities\n    - Process for connecting customers to appropriate human support\n    - Disclaimer requirements or legal considerations\n  - **SCOPE RESTRICTIONS**:\n    - AI must ONLY respond to company-related inquiries\n    - For off-topic questions (math, general knowledge, unrelated topics), redirect with: \"I'm here to help with [Company Name] questions only. How can I assist you with our [products/services]?\"\n    - Never engage in casual conversation or topics unrelated to the business\n\n**FORMAT**: Create as a complete system prompt that defines the AI's behavior, knowledge, and response patterns - NOT customer-facing dialogue or greetings. The generated prompt must include strict operational boundaries to keep the AI focused on company business only.\n\n### 4. Data Organization & Storage\n- **Structure all findings** in a standardized format suitable for Google Sheets with columns:\n  - Website URL\n  - Company Name\n  - Industry\n  - Business Description\n  - Generated Chatbot/Voice Assistant Prompt\n  - Key Products/Services\n  - Target Audience\n  - Communication Style\n  - Date Processed\n  - Data Quality Score (1-5)\n\n## Output Format\nPresent findings in a clear, tabular structure ready for spreadsheet import, with each company as a separate row and well-organized, consistent data formatting.\n\n## Quality Standards\n- Ensure accuracy in data extraction\n- Maintain consistency in categorization\n- Verify website accessibility and data freshness\n- Flag any incomplete or questionable data points"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -1824,
        176
      ],
      "id": "7e3e792e-6616-4867-b433-4f4585b3b578",
      "name": "Basic Web Scraping AI"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.action }}",
                    "rightValue": "train",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "3e7a604f-c779-4409-9852-38181a78db6c"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "TRAIN"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "76206925-9196-42ca-85f7-84e8fad452c5",
                    "leftValue": "={{ $json.body.action }}",
                    "rightValue": "message",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "MESSAGE"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2272,
        480
      ],
      "id": "1c592c3a-eee3-4ed1-96e2-bd5725591c27",
      "name": "action"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1z2S4lLpB07tOqCK8AGtVxY4DPu-DlvXt1arlhL5ODpI",
          "mode": "list",
          "cachedResultName": "AI Assistant Website Contents",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1z2S4lLpB07tOqCK8AGtVxY4DPu-DlvXt1arlhL5ODpI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Contents",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1z2S4lLpB07tOqCK8AGtVxY4DPu-DlvXt1arlhL5ODpI/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Content": "={{ $('Jina Fetch').item.json[\"data\"] }}",
            "Website URL": "={{ $('Fetch').item.json[\"body\"][\"websiteUrl\"] }}",
            "Company Name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Company_Name', ``, 'string') }}",
            "Business Description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Business_Description', ``, 'string') }}",
            "Industry": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Industry', ``, 'string') }}",
            "Target Audience": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Target_Audience', ``, 'string') }}",
            "Communication Style": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Communication_Style', ``, 'string') }}",
            "Date Processed": "={{ $now }}",
            "Prompt": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt', `Generated AI Agent Prompt`, 'string') }}",
            "Key Products and Services": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Key_Products_and_Services', ``, 'string') }}"
          },
          "matchingColumns": [
            "Website URL"
          ],
          "schema": [
            {
              "id": "Website URL",
              "displayName": "Website URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Company Name",
              "displayName": "Company Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Business Description",
              "displayName": "Business Description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Content",
              "displayName": "Content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Prompt",
              "displayName": "Prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Industry",
              "displayName": "Industry",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Key Products and Services",
              "displayName": "Key Products and Services",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Target Audience",
              "displayName": "Target Audience",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Communication Style",
              "displayName": "Communication Style",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Date Processed",
              "displayName": "Date Processed",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        -1632,
        400
      ],
      "id": "e1fc3f04-76f9-4381-b551-27532601346e",
      "name": "Add or Update Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "qeo46NfLv29wQvBe",
          "name": "Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1z2S4lLpB07tOqCK8AGtVxY4DPu-DlvXt1arlhL5ODpI",
          "mode": "list",
          "cachedResultName": "AI Assistant Website Contents",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1z2S4lLpB07tOqCK8AGtVxY4DPu-DlvXt1arlhL5ODpI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Contents",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1z2S4lLpB07tOqCK8AGtVxY4DPu-DlvXt1arlhL5ODpI/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Website URL",
              "lookupValue": "={{ $json.body.website }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -2048,
        688
      ],
      "id": "d5a97d5a-bd9f-4d08-8b5f-9942d1a51cb5",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "qeo46NfLv29wQvBe",
          "name": "Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1888,
        912
      ],
      "id": "314644e2-4633-44b3-8120-42cab36ebb32",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "xe52ky6hsna43t1j",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=  {{ $('Fetch').item.json.body.sessionId}}.{{ $('Fetch').item.json.body.websiteUrl }}",
        "contextWindowLength": 25
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -1664,
        912
      ],
      "id": "40e59758-6081-49ee-be66-6d5bdb6cd387",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -1424,
        480
      ],
      "id": "2b2e8045-38fb-47e1-b744-67012c6c1893",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $item(\"0\").$node[\"Fetch\"].json[\"body\"][\"message\"] }}",
        "options": {
          "systemMessage": "=Communication Style: {{ $json['Communication Style'] }}\n----\n{{ $json.Prompt }}\n----\nhere is the data:\nCompany - {{ $json['Company Name'] }}\nDescription - {{ $json['Business Description'] }}\nIndustry - {{ $json.Industry }}\nProducts and Services-  {{ $json['Key Products and Services'] }}\nAudience - {{ $json['Target Audience'] }}\n----\n\nraw data content:\n{{ $json.Content }}\n\n",
          "batching": {
            "delayBetweenBatches": 1000
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -1824,
        688
      ],
      "id": "4465e180-5e38-4eda-916d-bdf27d66905b",
      "name": "AI Assistant"
    }
  ],
  "pinData": {
    "Fetch": [
      {
        "json": {
          "headers": {
            "connection": "keep-alive",
            "host": "n8n.ednsy.com",
            "x-forwarded-scheme": "https",
            "x-forwarded-proto": "https",
            "x-forwarded-for": "44.222.225.19",
            "x-real-ip": "44.222.225.19",
            "content-length": "96",
            "content-type": "application/json",
            "n8n": "EDNSY",
            "x-vercel-id": "cle1::x4hzq-1753583367195-063886ee44d7",
            "accept": "*/*",
            "accept-language": "*",
            "sec-fetch-mode": "cors",
            "user-agent": "node",
            "accept-encoding": "br, gzip, deflate"
          },
          "params": {},
          "query": {},
          "body": {
            "action": "message",
            "message": "hi",
            "website": "https://ednsy.com",
            "sessionId": null,
            "userId": null
          },
          "webhookUrl": "https://n8n.ednsy.com/webhook/90d70ee3-b0b8-46c0-a95f-55cca585963f/chat",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Fetch": {
      "main": [
        [
          {
            "node": "action",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Jina Fetch": {
      "main": [
        [
          {
            "node": "Basic Web Scraping AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic Web Scraping AI",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "action": {
      "main": [
        [
          {
            "node": "Jina Fetch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add or Update Sheets": {
      "ai_tool": [
        [
          {
            "node": "Basic Web Scraping AI",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "AI Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Assistant",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Assistant",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Basic Web Scraping AI": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Assistant": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "22b8fb50-d03a-44fd-a379-6366fcf8dd8f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6cf14cc3e8eb21a489b634c42add1c1473a68abb6d5980d3bda83c628b9c7e64"
  },
  "id": "hCmU9vUkttikckaL",
  "tags": []
}